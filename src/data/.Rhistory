books_per_shelf <- pmax(pmin(round(books_per_shelf), 7), 3)
all_shelves = data.frame(x_start=all_x,y_start=all_y,books = books_per_shelf, topic = topics)
all_shelves %<>% mutate(row_no = row_number())
books_df <- data.frame(topic = character(),
x_start = double(),
y_start = double(),
book_height = double(),
book_width = double(),
shelf_no = integer())
for(i in 1:nrow(all_shelves)) {
row <- all_shelves[i,]
curr_x <- row$x_start + space_between_books/2
for (b in 1:row$books) {
book_height <- sample((book_height_min*10):(book_height_max*10), 1, replace=T)/10
curr_y <- row$y_start + shelf_height - book_height
books_df %<>% add_row(topic = row$topic,
x_start = curr_x,
y_start = curr_y,
book_height = book_height,
book_width = book_width,
shelf_no = row$row_no)
curr_x <- curr_x + book_width + space_between_books
}
}
books_df %<>% mutate(x_start = round(x_start/total_wall_width,5),
y_start = round(y_start/total_wall_height,5),
book_height = round(book_height/total_wall_height,5),
book_width = round(book_width / total_wall_width,5))
write(books_df %>% toJSON(), "C:/Users/Revi/Desktop/Github/twin_shelves_2/src/data/background_books.js")
source("C:/Users/Revi/Desktop/Github/Twin Shelves 2/src/data/book_maker2.R")
library(jsonlite)
library(magrittr)
library(dplyr)
##Conceptual grid made up of 58 columns and 24 rows.
#Absolute x, y coordinate of each column (from Inkscape)
x = c(78.191,90.865,103.607,116.421,129.095,141.839,154.582,167.396,
180.070,192.812,205.556,218.379,231.043,243.787,256.531,269.351,
282.017,294.761,307.505,320.322,332.992,345.736,358.478,371.296,
383.966,396.711,409.453,422.271,434.941,447.683,460.427,473.255,
485.916,498.658,511.402,524.230,536.888,549.632,562.377,575.197,
587.851,600.593,613.338,626.172,638.824,651.568,664.312,677.146,
689.798,702.543,715.287,728.121,740.773,753.517,766.277,779.117,
791.763,804.507)
y = c(72.394,77.209,82.023,86.836,91.650,96.464,
108.925,113.740,118.552,123.366,128.181,132.995,
145.597,150.411,155.226,160.038,164.853,169.667,
182.269,187.083,191.897,196.712,201.526,206.339)
# Useful vars, also from Inkscape
shelf_height = 4.459
shelf_width = 12.389
book_width= 1.295
book_height_min = 2.7
book_height_max = 4.1
space_between_books = 0.465
max_books_shelf = 7
total_wall_height = 225.670
total_wall_width = 1002.816
all_y = c(rep(y[1:6],30),rep(y[7:12],49),rep(y[13:18],50),rep(y[19:24],51))
all_x = c(rep(x[20:22],each=6),rep(x[24:33],each=6),rep(x[41:54],each=6),rep(x[56:58],each=6),
rep(x[1:9],each=6),rep(x[11:24],each=6),rep(x[26:35],each=6),rep(x[42:51],each=6),rep(x[53:58],each=6),
rep(x[1:2],each=6),rep(x[4:15],each=6),rep(x[17:28],each=6),rep(x[30:38],each=6),rep(x[43:53],each=6),rep(x[55:58],each=6),
rep(x[1:10],each=6),rep(x[12:26],each=6),rep(x[28:39],each=6),rep(x[44:50],each=6),rep(x[52:58],each=6))
#from library_layout_2.xlsx
topics <- c(rep("topic_24",30),rep("topic_21",84),rep("topic_8",66),rep("topic_23",144),
rep("topic_11",54),rep("topic_20",18),rep("topic_6",78),
rep("topic_4",12),
rep("student_work",6),
rep("topic_4",1),
rep("student_work",2),
rep("topic_4",1),
rep("student_work",2),
rep("topic_4",1),
rep("student_work",2),
rep("student_work",2),
rep("topic_4",1),
rep("topic_4",6),
rep("topic_13",24),rep("topic_12",9),rep("topic_9",15),rep("topic_22",30),
rep("topic_18",18),rep("topic_19",12),rep("topic_1",24),rep("topic_14",6),
rep("topic_15",36),rep("topic_7",48),rep("topic_5",42),
rep("topic_2",48),
rep("topic_10",18),
#Book recommendations
rep("recommended_books",4),
rep("topic_25",2),
rep("recommended_books",1),
rep("recommended_books-ignore",2),
rep("recommended_books",1),
rep("topic_25",2),
rep("recommended_books",4),
rep("topic_25",14),
#--------------------
rep("topic_17",54),rep("topic_16",30),rep("topic_3",42),
rep("study_books",42),
rep("exhibit",18),
#Dissertations
rep("dissertations-ignore",3),
rep("dissertations",3),
rep("dissertations-ignore",3),
rep("dissertations",4),
rep("dissertations-ignore",2),
rep("dissertations",4),
rep("dissertations-ignore",1),
rep("dissertations",4))
set.seed(42)
books_per_shelf = rnorm(length(all_y), mean=4.5, sd=2)
books_per_shelf <- pmax(pmin(round(books_per_shelf), 7), 3)
all_shelves = data.frame(x_start=all_x,y_start=all_y,books = books_per_shelf, topic = topics)
all_shelves %<>% mutate(row_no = row_number())
books_df <- data.frame(topic = character(),
x_start = double(),
y_start = double(),
book_height = double(),
book_width = double(),
shelf_no = integer())
for(i in 1:nrow(all_shelves)) {
row <- all_shelves[i,]
curr_x <- row$x_start + space_between_books/2
for (b in 1:row$books) {
book_height <- sample((book_height_min*10):(book_height_max*10), 1, replace=T)/10
curr_y <- row$y_start + shelf_height - book_height
books_df %<>% add_row(topic = row$topic,
x_start = curr_x,
y_start = curr_y,
book_height = book_height,
book_width = book_width,
shelf_no = row$row_no)
curr_x <- curr_x + book_width + space_between_books
}
}
books_df %<>% mutate(x_start = round(x_start/total_wall_width,5),
y_start = round(y_start/total_wall_height,5),
book_height = round(book_height/total_wall_height,5),
book_width = round(book_width / total_wall_width,5))
write(books_df %>% toJSON(), "C:/Users/Revi/Desktop/Github/twin_shelves_2/src/data/background_books.js")
write(books_df %>% toJSON(), "C:/Users/Revi/Desktop/Github/Twin Shelves 2/src/data/background_books.js")
library(openxlsx2)
library(dplyr)
library(magrittr)
library(tidyverse)
library(jsonlite)
get_dissertation_data <- function() {
final_names_1 <- read.csv2("C:/Users/Revi/Desktop/Github/DistributedDisplays/topic_modelling/15_shelves/theses_1_by_callnumber.csv",
sep = ",")
final_names_2 <- read.csv2("C:/Users/Revi/Desktop/Github/DistributedDisplays/topic_modelling/15_shelves/theses_2_by_callnumber.csv",
sep = ",")
all_names <- final_names_1 %>% bind_rows(final_names_2)
metadata <- read.csv2("C:/Users/Revi/Desktop/Github/DistributedDisplays/collections_overview/all_relevant_theses_metadata.csv",
sep = ",") %>% group_by(Title) %>% slice_head(n = 1)
all_names %<>% left_join(metadata, by=c("title"="Title"))
all_names %<>% mutate(OCLC=substr(link,79,90))
all_names %<>% select(title,authors = Author,
year = year_final,
description = Abstract,
std_call_number = call_numbers,
OCLC,
sub_topic = topic)
all_names %<>% mutate(shelf = 1072,
floor=1,
topic_id = "dissertations",
topic = "Dissertations",
year = as.character(year),
std_call_number = stringr::str_replace_all(std_call_number," ",""),
std_call_number = toupper(std_call_number))
return(all_names)
}
curr_path = rstudioapi::getSourceEditorContext()$path
curr_path <- sub("/[^/]*$", "", curr_path)
books <- openxlsx2::read_xlsx(paste0(curr_path,"/","workshop_data.xlsx"))
recommended_books <- openxlsx2::read_xlsx(paste0(curr_path,"/","recommended_books.xlsx"))
dissertations <- get_dissertation_data()
recommended_books %<>% mutate(
topic = "Book Recommendations",
topic_id = "recommended_books",
year = as.character(year),
std_call_number = as.character(std_call_number),
cover_file = ifelse(!is.na(cover_file),paste0("_recommended_books/cover_",cover_file),NA)) %>%
rename(
sub_topic = theme,
OCLC = unique_id)
head(recommended_books)
recommended_books %>% distinct(recommender,topic)
head(recommended_books)
recommended_books %>% distinct(recommender,sub_topic)
library(openxlsx2)
library(dplyr)
library(magrittr)
library(tidyverse)
library(jsonlite)
get_dissertation_data <- function() {
final_names_1 <- read.csv2("C:/Users/Revi/Desktop/Github/DistributedDisplays/topic_modelling/15_shelves/theses_1_by_callnumber.csv",
sep = ",")
final_names_2 <- read.csv2("C:/Users/Revi/Desktop/Github/DistributedDisplays/topic_modelling/15_shelves/theses_2_by_callnumber.csv",
sep = ",")
all_names <- final_names_1 %>% bind_rows(final_names_2)
metadata <- read.csv2("C:/Users/Revi/Desktop/Github/DistributedDisplays/collections_overview/all_relevant_theses_metadata.csv",
sep = ",") %>% group_by(Title) %>% slice_head(n = 1)
all_names %<>% left_join(metadata, by=c("title"="Title"))
all_names %<>% mutate(OCLC=substr(link,79,90))
all_names %<>% select(title,authors = Author,
year = year_final,
description = Abstract,
std_call_number = call_numbers,
OCLC,
sub_topic = topic)
all_names %<>% mutate(shelf = 1072,
floor=1,
topic_id = "dissertations",
topic = "Dissertations",
year = as.character(year),
std_call_number = stringr::str_replace_all(std_call_number," ",""),
std_call_number = toupper(std_call_number))
return(all_names)
}
curr_path = rstudioapi::getSourceEditorContext()$path
curr_path <- sub("/[^/]*$", "", curr_path)
books <- openxlsx2::read_xlsx(paste0(curr_path,"/","workshop_data.xlsx"))
recommended_books <- openxlsx2::read_xlsx(paste0(curr_path,"/","recommended_books.xlsx"))
dissertations <- get_dissertation_data()
recommended_books %<>% mutate(
topic = "Book Recommendations",
topic_id = "recommended_books",
year = as.character(year),
std_call_number = as.character(std_call_number),
cover_file = ifelse(!is.na(cover_file),paste0("_recommended_books/cover_",cover_file),NA)) %>%
rename(
sub_topic = theme,
OCLC = unique_id)
books %<>%  bind_rows(dissertations)
books %<>%  bind_rows(recommended_books)
books_json <- books  %>%
select(title,authors,year,OCLC,description,std_call_number,floor,cover_file,shelf) %>%
toJSON(pretty = TRUE, auto_unbox = TRUE)
write(books_json, file = paste0(curr_path,"/","workshop_data.js"))
books %<>% arrange(std_call_number,sub_topic,recommender)
books %<>% mutate(floor = case_when(shelf <= 180 ~ 4,
shelf <= 474 ~ 3,
shelf <= 774 ~ 2,
TRUE         ~ 1))
books %<>% group_by(topic,sub_topic) %>% mutate(book_no = row_number()) %>% ungroup()
books %<>% mutate(book_no = book_no + 5) #This makes the first shelf smaller, leaving room for the subtopic section tag
books %<>% mutate(virtual_shelf_temp = ((book_no -1 ) %/% 25)+1)
#Special treatment for recommended books, where shelves can be smaller than 25 books (one shelf per recommender)
books %<>%
group_by(sub_topic) %>%
mutate(virtual_shelf_temp = ifelse(topic_id == "recommended_books", as.integer(factor(recommender)), virtual_shelf_temp)) %>%
ungroup()
books$cover_file[is.na(books$cover_file)] <- "NA"
json_data <- books %>%
group_by(topic, topic_id, sub_topic, recommender, virtual_shelf_temp) %>%
summarise(
books_in_bookcase = n(),
books = list(data.frame(OCLC, cover_file))
) %>%
ungroup() %>%
rowwise()
# Convert the list to JSON
json_output <- toJSON(json_data, pretty = TRUE, auto_unbox = TRUE)
write(json_output, file = paste0(curr_path,"/","virtual_bookshelves.js"))
library(openxlsx2)
library(dplyr)
library(magrittr)
library(tidyverse)
library(jsonlite)
get_dissertation_data <- function() {
final_names_1 <- read.csv2("C:/Users/Revi/Desktop/Github/DistributedDisplays/topic_modelling/15_shelves/theses_1_by_callnumber.csv",
sep = ",")
final_names_2 <- read.csv2("C:/Users/Revi/Desktop/Github/DistributedDisplays/topic_modelling/15_shelves/theses_2_by_callnumber.csv",
sep = ",")
all_names <- final_names_1 %>% bind_rows(final_names_2)
metadata <- read.csv2("C:/Users/Revi/Desktop/Github/DistributedDisplays/collections_overview/all_relevant_theses_metadata.csv",
sep = ",") %>% group_by(Title) %>% slice_head(n = 1)
all_names %<>% left_join(metadata, by=c("title"="Title"))
all_names %<>% mutate(OCLC=substr(link,79,90))
all_names %<>% select(title,authors = Author,
year = year_final,
description = Abstract,
std_call_number = call_numbers,
OCLC,
sub_topic = topic)
all_names %<>% mutate(shelf = 1072,
floor=1,
topic_id = "dissertations",
topic = "Dissertations",
year = as.character(year),
std_call_number = stringr::str_replace_all(std_call_number," ",""),
std_call_number = toupper(std_call_number))
return(all_names)
}
curr_path = rstudioapi::getSourceEditorContext()$path
curr_path <- sub("/[^/]*$", "", curr_path)
books <- openxlsx2::read_xlsx(paste0(curr_path,"/","workshop_data.xlsx"))
recommended_books <- openxlsx2::read_xlsx(paste0(curr_path,"/","recommended_books.xlsx"))
dissertations <- get_dissertation_data()
recommended_books %<>% mutate(
topic = "Book Recommendations",
topic_id = "recommended_books",
year = as.character(year),
std_call_number = as.character(std_call_number),
cover_file = ifelse(!is.na(cover_file),paste0("_recommended_books/cover_",cover_file),NA)) %>%
rename(
sub_topic = theme,
OCLC = unique_id)
books %<>%  bind_rows(dissertations)
books %<>%  bind_rows(recommended_books)
books_json <- books  %>%
select(title,authors,year,OCLC,description,std_call_number,floor,cover_file,shelf) %>%
toJSON(pretty = TRUE, auto_unbox = TRUE)
#write(books_json, file = paste0(curr_path,"/","workshop_data.js"))
books %<>% arrange(std_call_number,sub_topic,recommender)
books %<>% mutate(floor = case_when(shelf <= 180 ~ 4,
shelf <= 474 ~ 3,
shelf <= 774 ~ 2,
TRUE         ~ 1))
books %<>% group_by(topic,sub_topic) %>% mutate(book_no = row_number()) %>% ungroup()
books %<>% mutate(book_no = book_no + 5) #This makes the first shelf smaller, leaving room for the subtopic section tag
books %<>% mutate(virtual_shelf_temp = ((book_no -1 ) %/% 25)+1)
#Special treatment for recommended books, where shelves can be smaller than 25 books (one shelf per recommender)
books %<>%
group_by(sub_topic) %>%
mutate(virtual_shelf_temp = ifelse(topic_id == "recommended_books", as.integer(factor(recommender)), virtual_shelf_temp)) %>%
ungroup()
head(books)
books$cover_file[is.na(books$cover_file)] <- "NA"
json_data <- books %>%
group_by(topic, topic_id, sub_topic, recommender, virtual_shelf_temp) %>%
summarise(
books_in_bookcase = n(),
books = list(data.frame(OCLC, cover_file))
) %>%
ungroup() %>%
rowwise()
json_data %>% head()
json_data %>% filter(topic=="Book Recommendations")
json_data %>% filter(topic=="Book Recommendations") %>% group_by(sub_topic) %>% mutate(topic_number = cur_group_id()) %>% ungroup()
json_data %>% filter(topic=="Book Recommendations") %>% group_by(sub_topic) %>% mutate(topic_number = cur_group_id()) %>% ungroup() %>% mutate(shelf_number = rowid_to_column())
json_data %>% filter(topic=="Book Recommendations") %>% group_by(sub_topic) %>% mutate(topic_number = cur_group_id()) %>% ungroup() %>% mutate(rowid_to_column(shelf_number))
json_data %>% filter(topic=="Book Recommendations") %>% group_by(sub_topic) %>% mutate(topic_number = cur_group_id()) %>% ungroup() %>% mutate(rowid_to_column("shelf_number"))
json_data %>% filter(topic=="Book Recommendations") %>% group_by(sub_topic) %>% mutate(topic_number = cur_group_id()) %>% ungroup() %>% rowid_to_column("shelf_number")
json_data %>% filter(topic=="Book Recommendations") %>% group_by(sub_topic) %>% mutate(topic_number = cur_group_id()) %>% ungroup() %>% rowid_to_column("shelf_number")
json_data %>% filter(topic=="Book Recommendations") %>% group_by(sub_topic) %>% mutate(topic_number = cur_group_id()) %>% ungroup() %>% rowid_to_column("shelf_number") %>% group_by(sub_topic) %>% slice_head(1)
json_data %>% filter(topic=="Book Recommendations") %>% group_by(sub_topic) %>% mutate(topic_number = cur_group_id()) %>% ungroup() %>% rowid_to_column("shelf_number") %>% group_by(sub_topic) %>% slice_head(n=1)
json_data %>% filter(topic=="Book Recommendations") %>% group_by(sub_topic) %>% mutate(topic_number = cur_group_id()) %>% ungroup() %>% rowid_to_column("shelf_number") %>% group_by(sub_topic) %>% slice_head(n=1) %>% select(sub_topic, shelf_number, topic_number)
recommendation_positions <- json_data %>%
filter(topic=="Book Recommendations") %>%
group_by(sub_topic) %>%
mutate(topic_number = cur_group_id()) %>%
ungroup() %>%
rowid_to_column("shelf_number") %>%
group_by(sub_topic) %>%
slice_head(n=1) %>%
select(sub_topic, shelf_number, topic_number)
recommendation_positions
recommendation_positions %>% toJSON(pretty = TRUE)
?toJSON
recommendation_positions %>% toJSON(pretty = TRUE, flatten = TRUE
\)
recommendation_positions %>% toJSON(pretty = TRUE, flatten = TRUE)
recommendation_positions %>% toJSON(pretty = TRUE, auto_unbox = TRUE)
recommendation_positions
recommendation_positions %>% toJSON(pretty = TRUE, auto_unbox = TRUE)
head(recommendation_positions)
recommendation_positions <- json_data %>%
filter(topic=="Book Recommendations") %>%
group_by(sub_topic) %>%
mutate(topic_number = cur_group_id()) %>%
ungroup() %>%
rowid_to_column("shelf_number") %>%
group_by(sub_topic) %>%
slice_head(n=1) %>%
select(sub_topic, shelf_number, topic_number)
recommendation_positions <- toJSON(
setNames(split(recommendation_positions[-1], recommendation_positions$sub_topic), recommendation_positions$sub_topic),
pretty = TRUE
)
recommendation_positions
recommendation_positions <- recommendation_positions %>%
rowwise() %>%
mutate(json_entry = list(setNames(
list(
shelf_number = shelf_number,
topic_number = topic_number
),
sub_topic
))) %>%                     # Create the desired structure for each row
pull(json_entry) %>%         # Extract the list of key-value pairs
unlist(recursive = FALSE) %>% # Combine them into a single list
toJSON(pretty = TRUE)        # Convert the list to JSON
recommendation_positions <- json_data %>%
filter(topic=="Book Recommendations") %>%
group_by(sub_topic) %>%
mutate(topic_number = cur_group_id()) %>%
ungroup() %>%
rowid_to_column("shelf_number") %>%
group_by(sub_topic) %>%
slice_head(n=1) %>%
select(sub_topic, shelf_number, topic_number)
recommendation_positions <- recommendation_positions %>%
rowwise() %>%
mutate(json_entry = list(setNames(
list(
shelf_number = shelf_number,
topic_number = topic_number
),
sub_topic
))) %>%                     # Create the desired structure for each row
pull(json_entry) %>%         # Extract the list of key-value pairs
unlist(recursive = FALSE) %>% # Combine them into a single list
toJSON(pretty = TRUE)        # Convert the list to JSON
recommendation_positions
recommendation_positions <- json_data %>%
filter(topic=="Book Recommendations") %>%
group_by(sub_topic) %>%
mutate(topic_number = cur_group_id()) %>%
ungroup() %>%
rowid_to_column("shelf_number") %>%
group_by(sub_topic) %>%
slice_head(n=1) %>%
select(sub_topic, shelf_number, topic_number)
recommendation_positions <- recommendation_positions %>%
rowwise() %>%
mutate(json_entry = list(setNames(
list(
shelf_number = shelf_number,
topic_number = topic_number
),
sub_topic
))) %>%                     # Create the desired structure for each row
pull(json_entry) %>%         # Extract the list of key-value pairs
unlist(recursive = FALSE) %>% # Combine them into a single list
toJSON(pretty = TRUE)        # Convert the list to JSON
head(recommendation_positions)
recommendation_positions <- json_data %>%
filter(topic=="Book Recommendations") %>%
group_by(sub_topic) %>%
mutate(topic_number = cur_group_id()) %>%
ungroup() %>%
rowid_to_column("shelf_number") %>%
group_by(sub_topic) %>%
slice_head(n=1) %>%
select(sub_topic, shelf_number, topic_number)
recommendation_positions
recommendation_positions <- json_data %>%
filter(topic=="Book Recommendations") %>%
group_by(sub_topic) %>%
mutate(topic_number = cur_group_id()) %>%
ungroup() %>%
rowid_to_column("shelf_number") %>%
group_by(sub_topic) %>%
slice_head(n=1) %>%
select(sub_topic, shelf_number, topic_number)
recommendation_positions <- setNames(
lapply(seq_len(nrow(recommendation_positions)), function(i) {
list(
shelf_number = recommendation_positions$shelf_number[i],
topic_number = recommendation_positions$topic_number[i]
)
}),
df$sub_topic
)
recommendation_positions <- setNames(
lapply(seq_len(nrow(recommendation_positions)), function(i) {
list(
shelf_number = recommendation_positions$shelf_number[i],
topic_number = recommendation_positions$topic_number[i]
)
}),
recommendation_positions$sub_topic
)
recommendation_positions
recommendation_positions %<>%  toJSON(pretty = TRUE)
recommendation_positions
recommendation_positions <- json_data %>%
filter(topic=="Book Recommendations") %>%
group_by(sub_topic) %>%
mutate(topic_number = cur_group_id()) %>%
ungroup() %>%
rowid_to_column("shelf_number") %>%
group_by(sub_topic) %>%
slice_head(n=1) %>%
select(sub_topic, shelf_number, topic_number)
recommendation_positions <- setNames(
lapply(seq_len(nrow(recommendation_positions)), function(i) {
list(
shelf_number = recommendation_positions$shelf_number[i],
topic_number = recommendation_positions$topic_number[i]
)
}),
recommendation_positions$sub_topic
)
recommendation_positions %<>%
toJSON(pretty = TRUE) %>%
write(file = paste0(curr_path,"/","recommendation_positions.js"))
recommendation_positions <- json_data %>%
filter(topic=="Book Recommendations") %>%
group_by(sub_topic) %>%
mutate(topic_number = cur_group_id()) %>%
ungroup() %>%
rowid_to_column("shelf_number") %>%
group_by(sub_topic) %>%
slice_head(n=1) %>%
select(sub_topic, shelf_number, topic_number)
recommendation_positions_json <- lapply(seq_len(nrow(recommendation_positions)), function(i) {
list(
shelf_number = recommendation_positions$shelf_number[i],
topic_number = recommendation_positions$topic_number[i]
)
})
names(recommendation_positions_json) <- recommendation_positions$sub_topic
recommendation_positions_json
recommendation_positions_json %<>%
toJSON(pretty = TRUE) %>%
write(file = paste0(curr_path,"/","recommendation_positions.js"))
