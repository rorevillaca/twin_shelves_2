OCLC,
sub_topic = topic,
color)
all_names %<>% mutate(shelf = 1072,
floor=1,
topic_id = "dissertations",
topic = "Dissertations",
year = as.character(year),
std_call_number = stringr::str_replace_all(std_call_number," ",""),
std_call_number = toupper(std_call_number))
return(all_names)
}
curr_path = rstudioapi::getSourceEditorContext()$path
curr_path <- sub("/[^/]*$", "", curr_path)
books <- openxlsx2::read_xlsx(paste0(curr_path,"/","workshop_data.xlsx"))
recommended_books <- openxlsx2::read_xlsx(paste0(curr_path,"/","recommended_books.xlsx"))
dissertations <- get_dissertation_data()
dissertations %<>% mutate(cover_file = as.character(NA))
study_books <-  openxlsx2::read_xlsx(paste0(curr_path,"/","studieboeken.xlsx")) %>%
mutate(year = as.character(year),
OCLC = as.character(OCLC),
description = as.character(description),
sub_topic = as.character(sub_topic),
sub_sub_topic = as.character(sub_sub_topic),
cover_file = as.character(cover_file),
shelf = as.numeric(shelf))
recommended_books %<>% mutate(
topic = "Book Recommendations",
topic_id = "recommended_books",
year = as.character(year),
std_call_number = as.character(std_call_number),
cover_file = ifelse(!is.na(cover_file),paste0("_recommended_books/cover_",cover_file),NA)) %>%
rename(
sub_topic = theme,
OCLC = unique_id)
books %<>%  bind_rows(dissertations)
books %<>%  bind_rows(recommended_books)
books %<>%  bind_rows(study_books)
books_json <- books  %>%
select(title,authors,year,OCLC,description,std_call_number,floor,cover_file,shelf) %>%
toJSON(pretty = TRUE, auto_unbox = TRUE)
write(books_json, file = paste0(curr_path,"/","workshop_data.js"))
books %<>% arrange(std_call_number,sub_topic,recommender)
books %<>% mutate(floor = case_when(shelf <= 180 ~ 4,
shelf <= 474 ~ 3,
shelf <= 774 ~ 2,
TRUE         ~ 1))
books %<>% group_by(topic,sub_topic) %>% mutate(book_no = row_number()) %>% ungroup()
books %<>% mutate(book_no = book_no + 5) #This makes the first shelf smaller, leaving room for the subtopic section tag
books %<>% mutate(virtual_shelf_temp = ((book_no -1 ) %/% 25)+1)
#Special treatment for recommended books, where shelves can be smaller than 25 books (one shelf per recommender)
books %<>%
group_by(sub_topic) %>%
mutate(virtual_shelf_temp = ifelse(topic_id == "recommended_books", as.integer(factor(recommender)), virtual_shelf_temp)) %>%
ungroup()
books$cover_file[is.na(books$cover_file)] <- "NA"
json_data <- books %>%
group_by(topic, topic_id, sub_topic, recommender, virtual_shelf_temp) %>%
summarise(
books_in_bookcase = n(),
books = list(data.frame(OCLC, cover_file, color))
) %>%
ungroup() %>%
rowwise()
# Convert the list to JSON
json_output <- toJSON(json_data, pretty = TRUE, auto_unbox = TRUE)
write(json_output, file = paste0(curr_path,"/","virtual_bookshelves.js"))
library(openxlsx2)
library(dplyr)
library(magrittr)
library(tidyverse)
library(jsonlite)
get_dissertation_data <- function() {
final_names_1 <- read.csv2("C:/Users/Revi/Desktop/Github/DistributedDisplays/topic_modelling/15_shelves/theses_1_by_callnumber.csv",
sep = ",")
final_names_2 <- read.csv2("C:/Users/Revi/Desktop/Github/DistributedDisplays/topic_modelling/15_shelves/theses_2_by_callnumber.csv",
sep = ",")
all_names <- final_names_1 %>% bind_rows(final_names_2)
metadata <- read.csv2("C:/Users/Revi/Desktop/Github/DistributedDisplays/collections_overview/all_relevant_theses_metadata.csv",
sep = ",") %>% group_by(Title) %>% slice_head(n = 1)
all_names %<>% left_join(metadata, by=c("title"="Title"))
all_names %<>% mutate(OCLC=substr(link,79,90))
all_names %<>% mutate(color = case_when( Faculty == "Applied Sciences" ~ "f9ad30",
Faculty == "Civil Engineering and Geosciences" ~ "4666b9",
Faculty == "Aerospace Engineering" ~ "f57e4b",
Faculty == "Industrial Design Engineering" ~ "db214bff",
Faculty == "Architecture and The Built Environment" ~ "41bb62",
Faculty == "Technology, Policy and Management" ~ "9e50ae",
Faculty == "Electrical Engineering, Mathematics and Computer Science" ~ "f25794",
Faculty == "Mechanical, Maritime and Materials Engineering" ~ "4dbec6",
TRUE ~ ""))
all_names %<>% select(title,authors = Author,
year = year_final,
description = Abstract,
std_call_number = call_numbers,
OCLC,
sub_topic = topic,
color)
all_names %<>% mutate(shelf = 1072,
floor=1,
topic_id = "dissertations",
topic = "Dissertations",
year = as.character(year),
std_call_number = stringr::str_replace_all(std_call_number," ",""),
std_call_number = toupper(std_call_number))
return(all_names)
}
curr_path = rstudioapi::getSourceEditorContext()$path
curr_path <- sub("/[^/]*$", "", curr_path)
books <- openxlsx2::read_xlsx(paste0(curr_path,"/","workshop_data.xlsx"))
recommended_books <- openxlsx2::read_xlsx(paste0(curr_path,"/","recommended_books.xlsx"))
dissertations <- get_dissertation_data()
dissertations %<>% mutate(cover_file = as.character(NA))
study_books <-  openxlsx2::read_xlsx(paste0(curr_path,"/","studieboeken.xlsx")) %>%
mutate(year = as.character(year),
OCLC = as.character(OCLC),
description = as.character(description),
sub_topic = as.character(sub_topic),
sub_sub_topic = as.character(sub_sub_topic),
cover_file = as.character(cover_file),
shelf = as.numeric(shelf))
recommended_books %<>% mutate(
topic = "Book Recommendations",
topic_id = "recommended_books",
year = as.character(year),
std_call_number = as.character(std_call_number),
cover_file = ifelse(!is.na(cover_file),paste0("_recommended_books/cover_",cover_file),NA)) %>%
rename(
sub_topic = theme,
OCLC = unique_id)
books %<>%  bind_rows(dissertations)
head(recommended_books)
library(openxlsx2)
library(dplyr)
library(magrittr)
library(tidyverse)
library(jsonlite)
get_dissertation_data <- function() {
final_names_1 <- read.csv2("C:/Users/Revi/Desktop/Github/DistributedDisplays/topic_modelling/15_shelves/theses_1_by_callnumber.csv",
sep = ",")
final_names_2 <- read.csv2("C:/Users/Revi/Desktop/Github/DistributedDisplays/topic_modelling/15_shelves/theses_2_by_callnumber.csv",
sep = ",")
all_names <- final_names_1 %>% bind_rows(final_names_2)
metadata <- read.csv2("C:/Users/Revi/Desktop/Github/DistributedDisplays/collections_overview/all_relevant_theses_metadata.csv",
sep = ",") %>% group_by(Title) %>% slice_head(n = 1)
all_names %<>% left_join(metadata, by=c("title"="Title"))
all_names %<>% mutate(OCLC=substr(link,79,90))
all_names %<>% mutate(color = case_when( Faculty == "Applied Sciences" ~ "f9ad30",
Faculty == "Civil Engineering and Geosciences" ~ "4666b9",
Faculty == "Aerospace Engineering" ~ "f57e4b",
Faculty == "Industrial Design Engineering" ~ "db214bff",
Faculty == "Architecture and The Built Environment" ~ "41bb62",
Faculty == "Technology, Policy and Management" ~ "9e50ae",
Faculty == "Electrical Engineering, Mathematics and Computer Science" ~ "f25794",
Faculty == "Mechanical, Maritime and Materials Engineering" ~ "4dbec6",
TRUE ~ ""))
all_names %<>% select(title,authors = Author,
year = year_final,
description = Abstract,
std_call_number = call_numbers,
OCLC,
sub_topic = topic,
color)
all_names %<>% mutate(shelf = 1072,
floor=1,
topic_id = "dissertations",
topic = "Dissertations",
year = as.character(year),
std_call_number = stringr::str_replace_all(std_call_number," ",""),
std_call_number = toupper(std_call_number))
return(all_names)
}
curr_path = rstudioapi::getSourceEditorContext()$path
curr_path <- sub("/[^/]*$", "", curr_path)
books <- openxlsx2::read_xlsx(paste0(curr_path,"/","workshop_data.xlsx"))
recommended_books <- openxlsx2::read_xlsx(paste0(curr_path,"/","recommended_books.xlsx"))
dissertations <- get_dissertation_data()
dissertations %<>% mutate(cover_file = "_dissertations/cover_diss")
study_books <-  openxlsx2::read_xlsx(paste0(curr_path,"/","studieboeken.xlsx")) %>%
mutate(year = as.character(year),
OCLC = as.character(OCLC),
description = as.character(description),
sub_topic = as.character(sub_topic),
sub_sub_topic = as.character(sub_sub_topic),
cover_file = as.character(cover_file),
shelf = as.numeric(shelf))
recommended_books %<>% mutate(
topic = "Book Recommendations",
topic_id = "recommended_books",
year = as.character(year),
std_call_number = as.character(std_call_number),
cover_file = ifelse(!is.na(cover_file),paste0("_recommended_books/cover_",cover_file),NA)) %>%
rename(
sub_topic = theme,
OCLC = unique_id)
books %<>%  bind_rows(dissertations)
books %<>%  bind_rows(recommended_books)
books %<>%  bind_rows(study_books)
books_json <- books  %>%
select(title,authors,year,OCLC,description,std_call_number,floor,cover_file,shelf) %>%
toJSON(pretty = TRUE, auto_unbox = TRUE)
write(books_json, file = paste0(curr_path,"/","workshop_data.js"))
books %<>% arrange(std_call_number,sub_topic,recommender)
books %<>% mutate(floor = case_when(shelf <= 180 ~ 4,
shelf <= 474 ~ 3,
shelf <= 774 ~ 2,
TRUE         ~ 1))
books %<>% group_by(topic,sub_topic) %>% mutate(book_no = row_number()) %>% ungroup()
books %<>% mutate(book_no = book_no + 5) #This makes the first shelf smaller, leaving room for the subtopic section tag
books %<>% mutate(virtual_shelf_temp = ((book_no -1 ) %/% 25)+1)
#Special treatment for recommended books, where shelves can be smaller than 25 books (one shelf per recommender)
books %<>%
group_by(sub_topic) %>%
mutate(virtual_shelf_temp = ifelse(topic_id == "recommended_books", as.integer(factor(recommender)), virtual_shelf_temp)) %>%
ungroup()
books$cover_file[is.na(books$cover_file)] <- "NA"
json_data <- books %>%
group_by(topic, topic_id, sub_topic, recommender, virtual_shelf_temp) %>%
summarise(
books_in_bookcase = n(),
books = list(data.frame(OCLC, cover_file, color))
) %>%
ungroup() %>%
rowwise()
# Convert the list to JSON
json_output <- toJSON(json_data, pretty = TRUE, auto_unbox = TRUE)
write(json_output, file = paste0(curr_path,"/","virtual_bookshelves.js"))
library(openxlsx2)
library(dplyr)
library(magrittr)
library(tidyverse)
library(jsonlite)
get_dissertation_data <- function() {
final_names_1 <- read.csv2("C:/Users/Revi/Desktop/Github/DistributedDisplays/topic_modelling/15_shelves/theses_1_by_callnumber.csv",
sep = ",")
final_names_2 <- read.csv2("C:/Users/Revi/Desktop/Github/DistributedDisplays/topic_modelling/15_shelves/theses_2_by_callnumber.csv",
sep = ",")
all_names <- final_names_1 %>% bind_rows(final_names_2)
metadata <- read.csv2("C:/Users/Revi/Desktop/Github/DistributedDisplays/collections_overview/all_relevant_theses_metadata.csv",
sep = ",") %>% group_by(Title) %>% slice_head(n = 1)
all_names %<>% left_join(metadata, by=c("title"="Title"))
all_names %<>% mutate(OCLC=substr(link,79,90))
all_names %<>% mutate(color = case_when( Faculty == "Applied Sciences" ~ "f9ad30",
Faculty == "Civil Engineering and Geosciences" ~ "4666b9",
Faculty == "Aerospace Engineering" ~ "f57e4b",
Faculty == "Industrial Design Engineering" ~ "db214bff",
Faculty == "Architecture and The Built Environment" ~ "41bb62",
Faculty == "Technology, Policy and Management" ~ "9e50ae",
Faculty == "Electrical Engineering, Mathematics and Computer Science" ~ "f25794",
Faculty == "Mechanical, Maritime and Materials Engineering" ~ "4dbec6",
TRUE ~ ""))
all_names %<>% select(title,authors = Author,
year = year_final,
description = Abstract,
std_call_number = call_numbers,
OCLC,
sub_topic = topic,
color)
all_names %<>% mutate(shelf = 1072,
floor=1,
topic_id = "dissertations",
topic = "Dissertations",
year = as.character(year),
std_call_number = stringr::str_replace_all(std_call_number," ",""),
std_call_number = toupper(std_call_number))
return(all_names)
}
curr_path = rstudioapi::getSourceEditorContext()$path
curr_path <- sub("/[^/]*$", "", curr_path)
books <- openxlsx2::read_xlsx(paste0(curr_path,"/","workshop_data.xlsx"))
recommended_books <- openxlsx2::read_xlsx(paste0(curr_path,"/","recommended_books.xlsx"))
dissertations <- get_dissertation_data()
dissertations %<>% mutate(cover_file = "_dissertations/cover_diss.webp")
study_books <-  openxlsx2::read_xlsx(paste0(curr_path,"/","studieboeken.xlsx")) %>%
mutate(year = as.character(year),
OCLC = as.character(OCLC),
description = as.character(description),
sub_topic = as.character(sub_topic),
sub_sub_topic = as.character(sub_sub_topic),
cover_file = as.character(cover_file),
shelf = as.numeric(shelf))
recommended_books %<>% mutate(
topic = "Book Recommendations",
topic_id = "recommended_books",
year = as.character(year),
std_call_number = as.character(std_call_number),
cover_file = ifelse(!is.na(cover_file),paste0("_recommended_books/cover_",cover_file),NA)) %>%
rename(
sub_topic = theme,
OCLC = unique_id)
books %<>%  bind_rows(dissertations)
books %<>%  bind_rows(recommended_books)
books %<>%  bind_rows(study_books)
books_json <- books  %>%
select(title,authors,year,OCLC,description,std_call_number,floor,cover_file,shelf) %>%
toJSON(pretty = TRUE, auto_unbox = TRUE)
write(books_json, file = paste0(curr_path,"/","workshop_data.js"))
books %<>% arrange(std_call_number,sub_topic,recommender)
books %<>% mutate(floor = case_when(shelf <= 180 ~ 4,
shelf <= 474 ~ 3,
shelf <= 774 ~ 2,
TRUE         ~ 1))
books %<>% group_by(topic,sub_topic) %>% mutate(book_no = row_number()) %>% ungroup()
books %<>% mutate(book_no = book_no + 5) #This makes the first shelf smaller, leaving room for the subtopic section tag
books %<>% mutate(virtual_shelf_temp = ((book_no -1 ) %/% 25)+1)
#Special treatment for recommended books, where shelves can be smaller than 25 books (one shelf per recommender)
books %<>%
group_by(sub_topic) %>%
mutate(virtual_shelf_temp = ifelse(topic_id == "recommended_books", as.integer(factor(recommender)), virtual_shelf_temp)) %>%
ungroup()
books$cover_file[is.na(books$cover_file)] <- "NA"
json_data <- books %>%
group_by(topic, topic_id, sub_topic, recommender, virtual_shelf_temp) %>%
summarise(
books_in_bookcase = n(),
books = list(data.frame(OCLC, cover_file, color))
) %>%
ungroup() %>%
rowwise()
# Convert the list to JSON
json_output <- toJSON(json_data, pretty = TRUE, auto_unbox = TRUE)
write(json_output, file = paste0(curr_path,"/","virtual_bookshelves.js"))
library(openxlsx2)
library(dplyr)
library(magrittr)
library(tidyverse)
library(jsonlite)
get_dissertation_data <- function() {
final_names_1 <- read.csv2("C:/Users/Revi/Desktop/Github/DistributedDisplays/topic_modelling/15_shelves/theses_1_by_callnumber.csv",
sep = ",")
final_names_2 <- read.csv2("C:/Users/Revi/Desktop/Github/DistributedDisplays/topic_modelling/15_shelves/theses_2_by_callnumber.csv",
sep = ",")
all_names <- final_names_1 %>% bind_rows(final_names_2)
metadata <- read.csv2("C:/Users/Revi/Desktop/Github/DistributedDisplays/collections_overview/all_relevant_theses_metadata.csv",
sep = ",") %>% group_by(Title) %>% slice_head(n = 1)
all_names %<>% left_join(metadata, by=c("title"="Title"))
all_names %<>% mutate(OCLC=substr(link,79,90))
all_names %<>% mutate(color = case_when( Faculty == "Applied Sciences" ~ "f9ad30",
Faculty == "Civil Engineering and Geosciences" ~ "4666b9",
Faculty == "Aerospace Engineering" ~ "f57e4b",
Faculty == "Industrial Design Engineering" ~ "db214bff",
Faculty == "Architecture and The Built Environment" ~ "41bb62",
Faculty == "Technology, Policy and Management" ~ "9e50ae",
Faculty == "Electrical Engineering, Mathematics and Computer Science" ~ "f25794",
Faculty == "Mechanical, Maritime and Materials Engineering" ~ "4dbec6",
TRUE ~ ""))
all_names %<>% select(title,authors = Author,
year = year_final,
description = Abstract,
std_call_number = call_numbers,
OCLC,
sub_topic = topic,
color)
all_names %<>% mutate(shelf = 1072,
floor=1,
topic_id = "dissertations",
topic = "Dissertations",
year = as.character(year),
std_call_number = stringr::str_replace_all(std_call_number," ",""),
std_call_number = toupper(std_call_number))
return(all_names)
}
curr_path = rstudioapi::getSourceEditorContext()$path
curr_path <- sub("/[^/]*$", "", curr_path)
books <- openxlsx2::read_xlsx(paste0(curr_path,"/","workshop_data.xlsx"))
recommended_books <- openxlsx2::read_xlsx(paste0(curr_path,"/","recommended_books.xlsx"))
dissertations <- get_dissertation_data()
dissertations %<>% mutate(cover_file = "_dissertations/cover_diss.webp")
study_books <-  openxlsx2::read_xlsx(paste0(curr_path,"/","studieboeken.xlsx")) %>%
mutate(year = as.character(year),
OCLC = as.character(OCLC),
description = as.character(description),
sub_topic = as.character(sub_topic),
sub_sub_topic = as.character(sub_sub_topic),
cover_file = as.character(cover_file),
shelf = as.numeric(shelf))
recommended_books %<>% mutate(
topic = "Book Recommendations",
topic_id = "recommended_books",
year = as.character(year),
std_call_number = as.character(std_call_number),
cover_file = ifelse(!is.na(cover_file),paste0("_recommended_books/cover_",cover_file),NA)) %>%
rename(
sub_topic = theme,
OCLC = unique_id)
books %<>%  bind_rows(dissertations)
books %<>%  bind_rows(recommended_books)
books %<>%  bind_rows(study_books)
books_json <- books  %>%
select(title,authors,year,OCLC,description,std_call_number,floor,cover_file,shelf) %>%
toJSON(pretty = TRUE, auto_unbox = TRUE)
write(books_json, file = paste0(curr_path,"/","workshop_data.js"))
books %<>% arrange(std_call_number,sub_topic,recommender)
books %<>% mutate(floor = case_when(shelf <= 180 ~ 4,
shelf <= 474 ~ 3,
shelf <= 774 ~ 2,
TRUE         ~ 1))
books %<>% group_by(topic,sub_topic) %>% mutate(book_no = row_number()) %>% ungroup()
books %<>% mutate(book_no = book_no + 5) #This makes the first shelf smaller, leaving room for the subtopic section tag
books %<>% mutate(virtual_shelf_temp = ((book_no -1 ) %/% 25)+1)
#Special treatment for recommended books, where shelves can be smaller than 25 books (one shelf per recommender)
books %<>%
group_by(sub_topic) %>%
mutate(virtual_shelf_temp = ifelse(topic_id == "recommended_books", as.integer(factor(recommender)), virtual_shelf_temp)) %>%
ungroup()
books$cover_file[is.na(books$cover_file)] <- "NA"
json_data <- books %>%
group_by(topic, topic_id, sub_topic, recommender, virtual_shelf_temp) %>%
summarise(
books_in_bookcase = n(),
books = list(data.frame(OCLC, cover_file, color))
) %>%
ungroup() %>%
rowwise()
# Convert the list to JSON
json_output <- toJSON(json_data, pretty = TRUE, auto_unbox = TRUE)
write(json_output, file = paste0(curr_path,"/","virtual_bookshelves.js"))
library(openxlsx2)
library(dplyr)
library(magrittr)
library(tidyverse)
library(jsonlite)
get_dissertation_data <- function() {
final_names_1 <- read.csv2("C:/Users/Revi/Desktop/Github/DistributedDisplays/topic_modelling/15_shelves/theses_1_by_callnumber.csv",
sep = ",")
final_names_2 <- read.csv2("C:/Users/Revi/Desktop/Github/DistributedDisplays/topic_modelling/15_shelves/theses_2_by_callnumber.csv",
sep = ",")
all_names <- final_names_1 %>% bind_rows(final_names_2)
metadata <- read.csv2("C:/Users/Revi/Desktop/Github/DistributedDisplays/collections_overview/all_relevant_theses_metadata.csv",
sep = ",") %>% group_by(Title) %>% slice_head(n = 1)
all_names %<>% left_join(metadata, by=c("title"="Title"))
all_names %<>% mutate(OCLC=substr(link,79,90))
all_names %<>% mutate(color = case_when( Faculty == "Applied Sciences" ~ "f9ad30",
Faculty == "Civil Engineering and Geosciences" ~ "4666b9",
Faculty == "Aerospace Engineering" ~ "f57e4b",
Faculty == "Industrial Design Engineering" ~ "db214bff",
Faculty == "Architecture and The Built Environment" ~ "41bb62",
Faculty == "Technology, Policy and Management" ~ "9e50ae",
Faculty == "Electrical Engineering, Mathematics and Computer Science" ~ "f25794",
Faculty == "Mechanical, Maritime and Materials Engineering" ~ "4dbec6",
TRUE ~ ""))
all_names %<>% select(title,authors = Author,
year = year_final,
description = Abstract,
std_call_number = call_numbers,
OCLC,
sub_topic = topic,
color)
all_names %<>% mutate(shelf = 1072,
floor=1,
topic_id = "dissertations",
topic = "Dissertations",
year = as.character(year),
std_call_number = stringr::str_replace_all(std_call_number," ",""),
std_call_number = toupper(std_call_number))
return(all_names)
}
curr_path = rstudioapi::getSourceEditorContext()$path
curr_path <- sub("/[^/]*$", "", curr_path)
books <- openxlsx2::read_xlsx(paste0(curr_path,"/","workshop_data.xlsx"))
recommended_books <- openxlsx2::read_xlsx(paste0(curr_path,"/","recommended_books.xlsx"))
dissertations <- get_dissertation_data()
dissertations %<>% mutate(cover_file = "_dissertations/cover_diss.webp")
study_books <-  openxlsx2::read_xlsx(paste0(curr_path,"/","studieboeken.xlsx")) %>%
mutate(year = as.character(year),
OCLC = as.character(OCLC),
description = as.character(description),
sub_topic = as.character(sub_topic),
sub_sub_topic = as.character(sub_sub_topic),
cover_file = as.character(cover_file),
shelf = as.numeric(shelf))
recommended_books %<>% mutate(
topic = "Book Recommendations",
topic_id = "recommended_books",
year = as.character(year),
std_call_number = as.character(std_call_number),
cover_file = ifelse(!is.na(cover_file),paste0("_recommended_books/cover_",cover_file),NA)) %>%
rename(
sub_topic = theme,
OCLC = unique_id)
books %<>%  bind_rows(dissertations)
books %<>%  bind_rows(recommended_books)
books %<>%  bind_rows(study_books)
books_json <- books  %>%
select(title,authors,year,OCLC,description,std_call_number,floor,cover_file,shelf) %>%
toJSON(pretty = TRUE, auto_unbox = TRUE)
write(books_json, file = paste0(curr_path,"/","workshop_data.js"))
books %<>% arrange(std_call_number,sub_topic,recommender)
books %<>% mutate(floor = case_when(shelf <= 180 ~ 4,
shelf <= 474 ~ 3,
shelf <= 774 ~ 2,
TRUE         ~ 1))
books %<>% group_by(topic,sub_topic) %>% mutate(book_no = row_number()) %>% ungroup()
books %<>% mutate(book_no = book_no + 5) #This makes the first shelf smaller, leaving room for the subtopic section tag
books %<>% mutate(virtual_shelf_temp = ((book_no -1 ) %/% 25)+1)
#Special treatment for recommended books, where shelves can be smaller than 25 books (one shelf per recommender)
books %<>%
group_by(sub_topic) %>%
mutate(virtual_shelf_temp = ifelse(topic_id == "recommended_books", as.integer(factor(recommender)), virtual_shelf_temp)) %>%
ungroup()
books$cover_file[is.na(books$cover_file)] <- "NA"
json_data <- books %>%
group_by(topic, topic_id, sub_topic, recommender, virtual_shelf_temp) %>%
summarise(
books_in_bookcase = n(),
books = list(data.frame(OCLC, cover_file, color))
) %>%
ungroup() %>%
rowwise()
# Convert the list to JSON
json_output <- toJSON(json_data, pretty = TRUE, auto_unbox = TRUE)
write(json_output, file = paste0(curr_path,"/","virtual_bookshelves.js"))
